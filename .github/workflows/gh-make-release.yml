name: gh-Make-Release
on:
  workflow_dispatch:
    inputs:
      release-version:
        description: Semantic version -M (majo) -m (minor) -p (patch)
        required: true
        default: '-p'

jobs:
  make-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        dev-branch:
          - develop
        prod-branch:
          - main

    steps:
      - uses: actions/checkout@v2

      - name: Get new release branch name
        if: success()
        shell: bash
        run: |
          chmod +x ./.github/scripts/new-release-version.sh
          echo "::set-output name=RELEASE_BRANCH_NAME::$(./.github/scripts/new-release-version.sh ${{ github.event.inputs.release-version }})"
        id: new-release-branch-name

      - name: create branch
        if: success()
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: ${{ steps.new-release-branch-name.outputs.RELEASE_BRANCH_NAME }}

      - name: Create pull request into master
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create --title "${{ steps.new-release-branch-name.outputs.RELEASE_BRANCH_NAME }} into ${{ matrix.prod-branch }}" -b "Hi!\nThis PR was created by Github workflow."
          gh pr create --base ${{ matrix.prod-branch }} -H ${{ steps.new-release-branch-name.outputs.RELEASE_BRANCH_NAME }} -r ${{ github.actor }}
          gh pr create -d


      - name: Create pull request to develop
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create --title "${{ steps.new-release-branch-name.outputs.RELEASE_BRANCH_NAME }} into ${{ matrix.dev-branch }}" --base ${{ matrix.dev-branch }} -H ${{ steps.new-release-branch-name.outputs.RELEASE_BRANCH_NAME }} -r ${{ github.actor }} -d -b "Hi!\nThis PR was created by Github workflow."

