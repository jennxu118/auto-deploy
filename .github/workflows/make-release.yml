name: Make a new release or hotfix branch workflow
on:
  workflow_dispatch:
    inputs:
      release-version:
        description: Semantic version -M (majo) -m (minor) -p (patch) -h (hotfix patch)
        required: true
        default: '-p'

jobs:
  make-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        dev-branch:
          - develop
        prod-branch:
          - master

    steps:
      - uses: actions/checkout@v2

      - name: Get new release branch name
        shell: bash
        run: |
          chmod +x ./scripts/make-release.sh
          echo "::set-output name=RELEASE_BRANCH_NAME::$(./scripts/make-release.sh)"
        id: new-release-branch-name

      - name: create branch
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: ${{ steps.new-release-branch-name.outputs.RELEASE_BRANCH_NAME }}

    - name: Create pull request into master
      if: success()
      uses: vsoch/pull-request-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PULL_REQUEST_BRANCH: ${{ matrix.prod-branch }}
        PULL_REQUEST_TITLE: ${{ steps.new-release-branch-name.outputs.RELEASE_BRANCH_NAME }} into ${{ matrix.prod-branch }}
        PULL_REQUEST_TEAM_REVIEWERS: ${{ github.event.issue.user.login }}
        PULL_REQUEST_DRAFT: true
        PULL_REQUEST_BODY: |
          Hi!
          This PR was created by Github workflow.

    - name: Create pull request to develop
      if: success()
      uses: vsoch/pull-request-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PULL_REQUEST_BRANCH: ${{ matrix.dev-branch }}
        PULL_REQUEST_TITLE: ${{ steps.new-release-branch-name.outputs.RELEASE_BRANCH_NAME }} into ${{ matrix.dev-branch }}
        PULL_REQUEST_TEAM_REVIEWERS: ${{ github.event.issue.user.login }}
        PULL_REQUEST_DRAFT: true
        PULL_REQUEST_BODY: |
          Hi!
          This PR was created by Github workflow.

#      - name: Get the version
#        id: get_version
#        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
#
#      - name: Make a new release
#        shell: bash
#        run: |
#          chmod +x ./scripts/make-release.sh
#          ./scripts/make-release.sh "${{ github.event.inputs.release-version }}" "${{ github.actor }}"
