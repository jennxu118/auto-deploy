name: Manual-Make-Release-2
# try
on:
  push:
    branches:
      - release/*
      - hotfix/*
  workflow_dispatch:
    inputs:
      release-version:
        description: Semantic version -M (majo) -m (minor) -p (patch) -h (hotfix patch)
        required: true
        default: '-p'

jobs:
  make-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        dev-branch:
          - develop
        prod-branch:
          - main

    steps:
      - uses: actions/checkout@v2

      - name: Get new release branch name
        if: ${{ (contains(github.event_name, 'workflow_dispatch')) || false }}
        shell: bash
        run: |
          chmod +x ./.github/scripts/new-release-version.sh
          echo "::set-output name=NEW_BRANCH_NAME::$(./.github/scripts/new-release-version.sh ${{ github.event.inputs.release-version }})"
        id: new-branch-name

      - name: create branch
        if: ${{ (contains(github.event_name, 'workflow_dispatch')) || false }}
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: ${{ steps.new-branch-name.outputs.NEW_BRANCH_NAME  }}

      - name: Get current Branch
        if: ${{ (contains(github.event_name, 'push')) }}
        run: |
          echo "::set-output name=NEW_BRANCH_NAME::${{github.ref_name}}"
        id: current-branch-name

      - name: Create pull request into master
        if: ${{ (contains(github.event_name, 'workflow_dispatch'))  && github.ref == 'refs/heads/develop' || false }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create --title "${{ steps.new-branch-name.outputs.NEW_BRANCH_NAME }} into ${{ matrix.prod-branch }}" --base ${{ matrix.prod-branch }} --head ${{ steps.new-branch-name.outputs.NEW_BRANCH_NAME }} --reviewer "${{ github.actor }}" --draft --body "Hi!\nThis PR was created by Github workflow."

      - name: Create pull request to develop
        if: ${{ (contains(github.event_name, 'workflow_dispatch'))  && github.ref == 'refs/heads/main' || false }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create --title "${{ steps.new-branch-name.outputs.NEW_BRANCH_NAME }} into ${{ matrix.dev-branch }}" --base ${{ matrix.dev-branch }} --head ${{ steps.new-branch-name.outputs.NEW_BRANCH_NAME }} --reviewer "${{ github.actor }}" --draft --body "Hi!\nThis PR was created by Github workflow."

      - name: Create pull request into master by push
        if: ${{ (contains(github.event_name, 'push')) && (contains(github.ref, 'refs/heads/hotfix')) || false }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create --title "${{ steps.current-branch-name.outputs.NEW_BRANCH_NAME }} into ${{ matrix.prod-branch }}" --base ${{ matrix.prod-branch }} --head ${{ steps.current-branch-name.outputs.NEW_BRANCH_NAME }} --reviewer "${{ github.actor }}" --draft --body "Hi!\nThis PR was created by Github workflow."

      - name: Create pull request to develop by push
        if: ${{ (contains(github.event_name, 'push')) && (contains(github.ref, 'refs/heads/release')) || false }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create --title "${{ steps.current-branch-name.outputs.NEW_BRANCH_NAME }} into ${{ matrix.dev-branch }}" --base ${{ matrix.dev-branch }} --head ${{ steps.current-branch-name.outputs.NEW_BRANCH_NAME }} --reviewer "${{ github.actor }}" --draft --body "Hi!\nThis PR was created by Github workflow."



 # only trigger by manual create release branch and new commit to release branch
  deploy-dev:
    if:  ${{ !(contains(github.ref, 'refs/heads/hotfix')) || false }}
    needs: [ make-release ]
    uses: jennxu118/auto-deploy/.github/workflows/deploy.yml@develop
    with:
      environment: Dev
      user_name: ${{ github.actor }}