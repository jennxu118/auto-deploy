name: CI - tag
on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        prod-branch:
          - main
    if: github.event.pull_request.merged == true # only merged pull requests must trigger this job
    steps:
      - uses: actions/checkout@v2

      - name: Extract version from branch name (for release branches)
        if: startsWith(github.event.pull_request.head.ref, 'release/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#release/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Extract version from branch name (for hotfix branches)
        if: startsWith(github.event.pull_request.head.ref, 'hotfix/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#hotfix/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

#      - name: Check Tag
#        id: check-tag
#        shell: bash
#        run: |
#          if [[ ${{ env.RELEASE_VERSION }} =~ ^([0-9]+\.){0,2}(\*|[0-9]+)$ ]]; then
#                    echo ::set-output name=match::true
#          fi

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          prod_branch: ${{ matrix.prod-branch }}
        run: |
          git fetch origin && git checkout ${{ env.prod_branch }}
          gh release create "${{ env.RELEASE_VERSION }}" -t "release/${{ env.RELEASE_VERSION }}"


#        uses: thomaseizinger/create-release@1.0.0
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          target_commitish: ${{ github.event.pull_request.merge_commit_sha }}
#          tag_name: ${{ env.RELEASE_VERSION }}
#          name: release ${{ env.RELEASE_VERSION }}
#          draft: false
#          prerelease: false

