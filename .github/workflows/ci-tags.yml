name: CI - tag
on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
#  run-unit-tests:
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [ ubuntu-20.04 ]
#        python-version: [ "3.8" ]
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v1
#        with:
#          python-version: ${{ matrix.python-version }}
#      - uses: webfactory/ssh-agent@v0.4.1
#        with:
#          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
#
#      - name: Upgrade pip
#        if: success()
#        run: |
#          python -m pip install --upgrade pip
#          python -m pip install pipenv
#          ssh-keyscan github.com >> ~/.ssh/known_hosts
#          ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts
#
#      - name: Run all Unit Tests
#        if: success()
#        uses: ./.github/actions/unit-test

  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
    if: github.event.pull_request.merged == true # only merged pull requests must trigger this job
    steps:
      - uses: actions/checkout@v2

      - name: Extract version from branch name (for release branches)
        if: startsWith(github.event.pull_request.head.ref, 'release/')
        run: |
          echo "BRANCH_NAME=${{ github.event.pull_request.head.ref }}" >> $GIHUB_ENV
          echo "RELEASE_VERSION=${{ BRANCH_NAME#release/ }}" >> $GIHUB_ENV

      - name: Extract version from branch name (for hotfix branches)
        if: startsWith(github.event.pull_request.head.ref, 'hotfix/')
        run: |
          echo "BRANCH_NAME=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
          VERSION=${BRANCH_NAME#hotfix/}

          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Check Tag
        id: check-tag
        run: |
          if [[ ${{ env.RELEASE_VERSION }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
                    echo ::set-output name=match::true
          fi

      - name: Create Release
        if: steps.check-tag.outputs.match == 'true'
        uses: thomaseizinger/create-release@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target_commitish: ${{ github.event.pull_request.merge_commit_sha }}
          tag_name: ${{ env.RELEASE_VERSION }}
          name: release ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false

